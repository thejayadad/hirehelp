// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  jobs      Job[]     // One-to-many relation with Job
  bids      Bid[]     // One-to-many relation with Bid
}

model Job {
  id            String    @id @default(cuid())
  name          String
  description   String
  type             String
  locationType     String
  location         String?
  employerId    String
  employerEmail String
  currentBid    Int
  startingPrice Int
  bidInterval   Int
  applicationEmail String?
  applicationUrl   String?
  approved         Boolean  @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  bids          Bid[]     // One-to-many relation with Bid
  employer      User      @relation(fields: [employerEmail], references: [email])
}

model Bid {
  id        String   @id @default(cuid())
  amount    Int
  bidderEmail String
  jobId     String
  approve   Boolean
  job       Job      @relation(fields: [jobId], references: [id])
  bidder    User     @relation(fields: [bidderEmail], references: [email])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
